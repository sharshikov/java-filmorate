CREATE TABLE IF NOT EXISTS PUBLIC.USERS (
	ID int generated by default as identity primary key,
	EMAIL VARCHAR(50) NOT NULL,
	LOGIN VARCHAR(50) NOT NULL,
	NAME VARCHAR(50),
	BIRTHDAY DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.RATING_MPA (
	ID int generated by default as identity primary key,
	NAME VARCHAR(5) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM (
	ID int generated by default as identity primary key,
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(200) NOT NULL,
	RELEASE_DATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	RATING_MPA_ID INTEGER NOT NULL,
	CONSTRAINT FILM_RATING_MPA_FK
                FOREIGN KEY (RATING_MPA_ID)
                    REFERENCES PUBLIC.RATING_MPA (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FRIEND (
	ID int generated by default as identity primary key,
	USER_ID INTEGER NOT NULL,
	FRIEND_ID INTEGER NOT NULL,
	STATUS VARCHAR(20) NOT NULL,
	CONSTRAINT FRIEND_USER_FK
            FOREIGN KEY (USER_ID)
                REFERENCES PUBLIC.USERS (ID),
    CONSTRAINT FRIEND_USER_FK_1
                FOREIGN KEY (FRIEND_ID)
                    REFERENCES PUBLIC.USERS (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.LIKE_FILM_BY_USER (
	ID int generated by default as identity primary key,
	FILM_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	CONSTRAINT LIKE_FILM_BY_USER_FILM_FK
                FOREIGN KEY (FILM_ID)
                    REFERENCES PUBLIC.FILM (ID),
    CONSTRAINT LIKE_FILM_BY_USER_USER_FK
                    FOREIGN KEY (USER_ID)
                        REFERENCES PUBLIC.USERS (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
	ID int generated by default as identity primary key,
	NAME VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.GENRE_FILM (
	ID int generated by default as identity primary key,
	FILM_ID INTEGER NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT GENRE_FILM_FILM_FK
                    FOREIGN KEY (FILM_ID)
                        REFERENCES PUBLIC.FILM (ID),
    CONSTRAINT GENRE_FILM_GENRE_FK
                        FOREIGN KEY (GENRE_ID)
                            REFERENCES PUBLIC.GENRE (ID)
);